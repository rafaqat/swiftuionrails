<div class="min-h-screen bg-gray-100">
  <div class="max-w-4xl mx-auto p-8">
    <!-- Header with back navigation -->
    <div class="mb-8">
      <a href="<%= root_path %>" class="inline-flex items-center text-blue-600 hover:text-blue-700 mb-4">
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
        </svg>
        Back to Components
      </a>
      <h1 class="text-3xl font-bold text-gray-900">Counter Component</h1>
      <p class="text-lg text-gray-600 mt-2">A simple counter demonstrating client-side state management with Stimulus</p>
    </div>
    
    <!-- Component Demo -->
    <div class="bg-white rounded-lg shadow-lg p-8 mb-8">
      <h2 class="text-xl font-semibold text-gray-900 mb-6">Live Demo</h2>
      <div class="flex justify-center">
        <%= render CounterComponent.new(
          initial_count: 0,
          step: 1,
          label: "Counter"
        ) %>
      </div>
    </div>
    
    <!-- Code Examples -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
      <!-- Usage Example -->
      <div class="bg-white rounded-lg shadow-md p-6">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Usage</h3>
        <pre class="bg-gray-900 text-gray-300 p-4 rounded-lg overflow-x-auto text-sm"><code>&lt;%= render CounterComponent.new(
  initial_count: 0,
  step: 1,
  label: "Counter"
) %&gt;</code></pre>
      </div>
      
      <!-- Props Documentation -->
      <div class="bg-white rounded-lg shadow-md p-6">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Props</h3>
        <div class="space-y-3">
          <div>
            <code class="text-sm bg-gray-100 px-2 py-1 rounded">initial_count</code>
            <span class="text-sm text-gray-600 ml-2">Integer (default: 0)</span>
            <p class="text-sm text-gray-600 mt-1">Starting value for the counter</p>
          </div>
          <div>
            <code class="text-sm bg-gray-100 px-2 py-1 rounded">step</code>
            <span class="text-sm text-gray-600 ml-2">Integer (default: 1)</span>
            <p class="text-sm text-gray-600 mt-1">Amount to increment/decrement by</p>
          </div>
          <div>
            <code class="text-sm bg-gray-100 px-2 py-1 rounded">label</code>
            <span class="text-sm text-gray-600 ml-2">String (default: "Counter")</span>
            <p class="text-sm text-gray-600 mt-1">Display label for the counter</p>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Architecture Details -->
    <div class="bg-white rounded-lg shadow-md p-6 mt-8">
      <h3 class="text-lg font-semibold text-gray-900 mb-4">Architecture</h3>
      <div class="prose prose-sm text-gray-600">
        <p>This component demonstrates our Rails-first architecture:</p>
        <ul>
          <li><strong>Stateless Component</strong>: The Ruby component only renders HTML structure</li>
          <li><strong>Stimulus Controller</strong>: All state and interactivity managed client-side</li>
          <li><strong>Data Attributes</strong>: Props passed to Stimulus via data-* attributes</li>
          <li><strong>Progressive Enhancement</strong>: Shows initial values even without JavaScript</li>
        </ul>
      </div>
    </div>
    
    <!-- Try Different Configurations -->
    <div class="bg-white rounded-lg shadow-md p-6 mt-8">
      <h3 class="text-lg font-semibold text-gray-900 mb-4">Try Different Configurations</h3>
      <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
        <div>
          <h4 class="font-medium text-gray-700 mb-2">Step Counter</h4>
          <%= render CounterComponent.new(
            initial_count: 0,
            step: 5,
            label: "Steps"
          ) %>
        </div>
        <div>
          <h4 class="font-medium text-gray-700 mb-2">Score Tracker</h4>
          <%= render CounterComponent.new(
            initial_count: 100,
            step: 10,
            label: "Score"
          ) %>
        </div>
        <div>
          <h4 class="font-medium text-gray-700 mb-2">Inventory</h4>
          <%= render CounterComponent.new(
            initial_count: 50,
            step: 1,
            label: "Items"
          ) %>
        </div>
      </div>
    </div>
  </div>
</div>