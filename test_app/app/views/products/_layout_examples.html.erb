<%# Example 1: Basic usage with Rails objects %>
<%= render ProductLayoutComponent.new(
  products: @products,
  title: "Our Products",
  columns: 4,
  currency: "$"
) %>

<%# Example 2: With custom configuration %>
<%= render ProductLayoutComponent.new(
  products: @products,
  title: "Featured Items",
  columns: 3,
  show_filters: true,
  filter_position: "top",
  filterable_attributes: [:price, :color, :category],
  show_description: true,
  cta_text: "Buy Now",
  cta_style: "primary"
) %>

<%# Example 3: With slots for customization %>
<%= render ProductLayoutComponent.new(products: @products) do |component| %>
  <% component.with_header_actions do %>
    <div class="flex gap-2">
      <%= link_to "Add Product", new_product_path, class: "btn btn-primary" %>
      <%= button_tag "Export", class: "btn btn-secondary" %>
    </div>
  <% end %>
  
  <% component.with_filters do %>
    <div class="bg-white p-6 rounded-lg shadow-sm">
      <h3 class="font-semibold mb-4">Filter Products</h3>
      
      <!-- Price Range -->
      <div class="mb-6">
        <label class="block text-sm font-medium mb-2">Price Range</label>
        <input type="range" min="0" max="1000" class="w-full" />
      </div>
      
      <!-- Categories -->
      <div class="mb-6">
        <label class="block text-sm font-medium mb-2">Categories</label>
        <% @categories.each do |category| %>
          <label class="flex items-center gap-2 mb-1">
            <input type="checkbox" value="<%= category.id %>" />
            <span><%= category.name %></span>
          </label>
        <% end %>
      </div>
      
      <!-- Search -->
      <div>
        <input type="text" placeholder="Search products..." 
               class="w-full px-3 py-2 border rounded-md" />
      </div>
    </div>
  <% end %>
  
  <% component.with_footer do %>
    <div class="text-center py-8">
      <p class="text-gray-600 mb-4">Showing <%= @products.count %> of <%= @total_count %> products</p>
      <%= paginate @products %>
    </div>
  <% end %>
<% end %>

<%# Example 4: With custom product card rendering using DSL %>
<%= render ProductLayoutComponent.new(products: @products, columns: 2) do |component| %>
  <% @products.each_with_index do |product, index| %>
    <% component.with_product_card(product: product, index: index) do %>
      <%= swift_ui do %>
        <% div
          .bg("white")
          .rounded("lg")
          .shadow("md")
          .overflow("hidden")
          .hover("shadow-xl")
          .transition do %>
          
          <% if product.featured? %>
            <% div
              .bg("yellow-400")
              .text_size("xs")
              .font_weight("bold")
              .px(2).py(1) do %>
              <% text("FEATURED") %>
            <% end %>
          <% end %>
          
          <% image(
            src: product.image_url,
            alt: product.name
          ).w_full.h(48).object("cover") %>
          
          <% div.p(4) do %>
            <% vstack(spacing: 4, alignment: :start) do %>
              <% text(product.name)
                .font_weight("bold")
                .text_size("lg") %>
              
              <% text(truncate(product.description, length: 100))
                .text_color("gray-600")
                .text_size("sm") %>
              
              <% hstack(alignment: :center).w_full.justify_between do %>
                <% text("$#{product.price}")
                  .text_size("2xl")
                  .font_weight("bold") %>
                
                <% if product.in_stock? %>
                  <% button("Add to Cart")
                    .bg("blue-600")
                    .text_color("white")
                    .px(4).py(2)
                    .rounded
                    .hover("bg-blue-700")
                    .data(action: "click->product#addToCart".html_safe)
                    .data(product_id: product.id) %>
                <% else %>
                  <% text("Out of Stock")
                    .text_color("gray-500") %>
                <% end %>
              <% end %>
            <% end %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
<% end %>

<%# Example 5: Minimal usage %>
<%= render ProductLayoutComponent.new(
  products: Product.featured.limit(8),
  show_filters: false,
  show_sort: false,
  columns: 4
) %>